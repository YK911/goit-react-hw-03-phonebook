{"version":3,"sources":["component/contactForm/ContactForm.module.css","component/contactList/ContactList.module.css","component/contactFilter/ContactFilter.module.css","component/App.module.css","component/contactForm/ContactForm.js","component/contact/Contact.js","component/contactList/ContactList.js","component/contactFilter/ContactFilter.js","component/App.js","index.js","component/contact/Contact.module.css"],"names":["module","exports","ContactForm","state","name","number","handleChange","target","value","setState","handleSubmit","event","preventDefault","length","props","onCompareContact","alert","onAddContact","this","className","css","form","onSubmit","label","input","type","onChange","button","Component","Contact","onDeleteContact","container","onClick","ContactList","contacts","list","map","contact","listItem","key","id","ContactFilter","filter","onChangeFilter","App","addContact","newContact","contactToAdd","uuid","localStorage","setItem","JSON","stringify","deleteContact","compareContact","some","changeFilter","getItem","parse","filteredContacts","toLowerCase","includes","filterContact","contactApp","contactsTitle","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4f1072fb.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__ZUBts\",\"label\":\"ContactForm_label__svM-f\",\"input\":\"ContactForm_input__2UpEx\",\"button\":\"ContactForm_button__10141\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__2sIq6\",\"listItem\":\"ContactList_listItem__2Croi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"ContactFilter_label__hX3Gz\",\"input\":\"ContactFilter_input__1bJHN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactApp\":\"App_contactApp__6RirR\",\"contactsTitle\":\"App_contactsTitle__2Jb4K\"};","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport css from \"./ContactForm.module.css\";\r\n\r\nexport default class ContactForm extends Component {\r\n  state = {\r\n    name: \"\",\r\n    number: \"\"\r\n  };\r\n\r\n  handleChange = ({ target: { name, value } }) => {\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleSubmit = event => {\r\n    event.preventDefault();\r\n    if (this.state.name.length !== 0) {\r\n      if (this.props.onCompareContact(this.state.name)) {\r\n        alert(`${this.state.name} is already in contacts`);\r\n      } else {\r\n        this.props.onAddContact({ ...this.state });\r\n      }\r\n    } else {\r\n      alert(\"Please enter a contact name!\");\r\n    }\r\n    this.setState({\r\n      name: \"\",\r\n      number: \"\"\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { name, number } = this.state;\r\n    return (\r\n      <form className={css.form} onSubmit={this.handleSubmit}>\r\n        <label className={css.label}>\r\n          Name\r\n          <input\r\n            className={css.input}\r\n            type=\"text\"\r\n            name=\"name\"\r\n            onChange={this.handleChange}\r\n            value={name}\r\n          />\r\n        </label>\r\n        <label className={css.label}>\r\n          Number\r\n          <input\r\n            className={css.input}\r\n            type=\"text\"\r\n            name=\"number\"\r\n            onChange={this.handleChange}\r\n            value={number}\r\n          />\r\n        </label>\r\n        <button className={css.button} type=\"submit\">\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nContactForm.propTypes = {\r\n  name: PropTypes.string,\r\n  number: PropTypes.string\r\n};\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport css from \"./Contact.module.css\";\r\n\r\nconst Contact = ({ name, number, onDeleteContact }) => (\r\n  <div className={css.container}>\r\n    <span className={css.name}>{name}</span>\r\n    <span>{number}</span>\r\n    <button className={css.button} type=\"button\" onClick={onDeleteContact}>\r\n      Delete\r\n    </button>\r\n  </div>\r\n);\r\n\r\nContact.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  number: PropTypes.string.isRequired,\r\n  onDeleteContact: PropTypes.func.isRequired\r\n};\r\n\r\nexport default Contact;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Contact from \"../contact/Contact\";\r\nimport css from \"./ContactList.module.css\";\r\n\r\nconst ContactList = ({ contacts, onDeleteContact }) =>\r\n  contacts.length > 0 && (\r\n    <ul className={css.list}>\r\n      {contacts.map(contact => (\r\n        <li className={css.listItem} key={contact.id}>\r\n          <Contact\r\n            {...contact}\r\n            onDeleteContact={() => onDeleteContact(contact.id)}\r\n          />\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired\r\n    }).isRequired\r\n  ).isRequired,\r\n  onDeleteContact: PropTypes.func.isRequired\r\n};\r\n\r\nexport default ContactList;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport css from \"./ContactFilter.module.css\";\r\n\r\nconst ContactFilter = ({ filter, onChangeFilter }) => {\r\n  return (\r\n    <label className={css.label}>\r\n      Find contacts by name\r\n      <input\r\n        className={css.input}\r\n        type=\"text\"\r\n        name=\"filter\"\r\n        onChange={onChangeFilter}\r\n        value={filter}\r\n      />\r\n    </label>\r\n  );\r\n};\r\n\r\nContactFilter.propTypes = {\r\n  filter: PropTypes.string.isRequired,\r\n  onChangeFilter: PropTypes.func.isRequired\r\n};\r\n\r\nexport default ContactFilter;\r\n","import React, { Component } from \"react\";\nimport ContactForm from \"./contactForm/ContactForm\";\nimport ContactList from \"./contactList/ContactList\";\nimport ContactFilter from \"./contactFilter/ContactFilter\";\nimport css from \"./App.module.css\";\nimport uuid from \"uuid\";\n\nconst filterContact = (contacts, filter) => {\n  return contacts.filter(contact =>\n    contact.name.toLowerCase().includes(filter.toLowerCase())\n  );\n};\n\nclass App extends Component {\n  state = {\n    contacts: [\n      { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\n      { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\n      { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\n      { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" }\n    ],\n    filter: \"\"\n  };\n\n  componentDidMount() {\n    if (localStorage.getItem(\"contacts\")) {\n      this.setState({\n        contacts: JSON.parse(localStorage.getItem(\"contacts\"))\n      });\n    }\n  }\n\n  addContact = newContact => {\n    const contactToAdd = {\n      ...newContact,\n      id: uuid()\n    };\n\n    this.setState(state => {\n      localStorage.setItem(\n        \"contacts\",\n        JSON.stringify([...this.state.contacts, contactToAdd])\n      );\n      return { contacts: [...state.contacts, contactToAdd] };\n    });\n  };\n\n  deleteContact = id => {\n    this.setState(state => {\n      localStorage.setItem(\n        \"contacts\",\n        JSON.stringify(state.contacts.filter(contact => contact.id !== id))\n      );\n      return {\n        contacts: state.contacts.filter(contact => contact.id !== id)\n      };\n    });\n  };\n\n  compareContact = name => {\n    return this.state.contacts.some(contact => contact.name === name);\n  };\n\n  changeFilter = event => {\n    this.setState({ filter: event.target.value });\n  };\n\n  render() {\n    const { filter, contacts } = this.state;\n\n    const filteredContacts = filterContact(contacts, filter);\n\n    return (\n      <div className={css.contactApp}>\n        <h2>Phonebook</h2>\n        <ContactForm\n          onAddContact={this.addContact}\n          onCompareContact={this.compareContact}\n        />\n\n        <h2 className={css.contactsTitle}>Contacts</h2>\n        {contacts.length > 2 && (\n          <ContactFilter filter={filter} onChangeFilter={this.changeFilter} />\n        )}\n\n        <ContactList\n          contacts={filteredContacts}\n          onDeleteContact={this.deleteContact}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./component/App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Contact_container__btnsq\",\"name\":\"Contact_name__J3DVQ\",\"button\":\"Contact_button__1SlNi\"};"],"sourceRoot":""}